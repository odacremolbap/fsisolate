package fsisolate

import (
	"fmt"
	"testing"
)

func TestGetPathType(t *testing.T) {

	var testData = []struct {
		path     string   // resoruce URL
		pathType pathType // expected status from URL
		pathOK   bool     // whether path should be OK or return an error
	}{
		{"/", directoryPath, true},
		{"http://url.path", urlPath, true},
		{"https://secure.url.path", urlPath, true},
		{"./path_test.go", filePath, true},
		{"*?<notapath", unknownPath, false},
	}

	for _, td := range testData {

		pt, err := getPathType(td.path)

		if err != nil {
			if td.pathOK {
				t.Errorf("Error getting pathType for %q: %s", td.path, err)
				continue
			}
			// if an expected error ocurred, continue with next test
			continue
		}

		if err == nil && !td.pathOK {
			t.Errorf("Pathtype for %q should have failed, but did not", td.path)
			continue
		}

		if pt != td.pathType {
			t.Errorf("Expected pathtype for %q was %q but received %q", td.path, td.pathType, pt)
		}
	}

}

// generated by stringer --type=pathType; DO NOT EDIT.
// too late, I edited it
const _pathTypeName = "unknownPathurlPathdirectoryPathfilePath"

var _pathTypeIndex = [...]uint8{0, 11, 18, 31, 39}

func (i pathType) String() string {
	if i >= pathType(len(_pathTypeIndex)-1) {
		return fmt.Sprintf("pathType(%d)", i)
	}
	return _pathTypeName[_pathTypeIndex[i]:_pathTypeIndex[i+1]]
}
